// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
       return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
       return Memory.peek(24576);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
       var char c, key;

       //wait key pressed
       let key = Keyboard.keyPressed();
       while(key=0){
	  let key = Keyboard.keyPressed();
       }
       let c = key;

       //key is pressed
       while(~(key=0)){
          let key = Keyboard.keyPressed();
       }

       //key is unpressed
       do Output.printChar(c);
       return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
    	var String mesg;
	var char key;
    	let mesg = String.new(1);

	//output message
	do Output.printString(message);

	//read Line
	let key = Keyboard.readChar();		   
	while(~(key=String.newLine())){
	   if(key=String.backSpace()){
	      do mesg.eraseLastChar();
	   }
	   else{
	      let mesg = Keyboard.appendChar_dinamic(mesg, key);
	   }
	   let key = Keyboard.readChar();		   
	}
	return mesg;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
       var String str_int;
       let str_int = Keyboard.readLine(message);
       return str_int.intValue();
    }

    function String appendChar_dinamic(String str, char c){
       var int len, i;
       var String str_appended;
       let len = str.length();
       let i = 0;
       
       let str_appended = String.new((len+1));
       while(i<len){
          do str_appended.appendChar(str.charAt(i));
	  let i = i+1;
       }
       do str_appended.appendChar(c);
       do str.dispose();
       return str_appended;
       
    }

}
